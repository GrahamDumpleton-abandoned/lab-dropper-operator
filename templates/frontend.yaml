kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: frontend
parameters:
- name: APPLICATION_NAME
  value: "frontend"
  required: true
- name: DATABASE_URL
  value: ""
objects:
- kind: ImageStream
  apiVersion: image.openshift.io/v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: openshiftkatacoda/blog-django-py:latest
- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
        - name: blog
          image: openshiftkatacoda/blog-django-py:latest
          ports:
          - containerPort: 8080
            protocol: TCP
          env:
          - name: DATABASE_URL
            value: ${DATABASE_URL}
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - blog
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
- kind: Service
  apiVersion: v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: ${APPLICATION_NAME}
  spec:
    host: ""
    port:
      targetPort: 8080-tcp
    to:
      name: ${APPLICATION_NAME}
      weight: null
